
# Load the sheet content to inspect its structure

```{python}
import pandas as pd
data = pd.read_excel('data/Export and Import Unit Value Indices 2016 to 2024.xlsx', sheet_name='Export and Import Unit Value In')
data
```


## Data cleaning

First we melt the wide data to easily perform data analysis. Columns H01, H02, H17, H18 and H25 can be removed. The observations were collected on a monthly bases. The December 2020 was used as the baseline for all the observations.

```{python}
data_long = data.melt(id_vars=['H01', 'H02', 'H03', 'H04', 'H05', 'H17', 'H18', 'H25'], var_name='Date', value_name='Amount')
clean_data = data_long.drop(columns=['H01', 'H02','H17', 'H18', 'H25'])
clean_data
```

## Plot the data

```{python}
import plotly.express as px
data.head(3)
px.histogram(clean_data, y='H04', x='Amount', color='H04')
```

```{python}

# Truncate function
def truncate_label(label, max_length=10):
    return label[:max_length] + "..." if len(label) > max_length else label

# Apply truncation to the `H05` column
clean_data['H05_truncated'] = clean_data['H05'].apply(lambda x: truncate_label(x, max_length=15))

# Create the histogram
fig = px.histogram(
    clean_data.query('H04 == "Imports"'), 
    y='H05_truncated', 
    x='Amount',
    barmode='relative'
)

# Update layout for better readability
fig.update_layout(
    yaxis_title="Shortened H05 Labels",
    xaxis_title="Yearly Values",
    title="Histogram with Truncated Labels"
)

# Show the plot
fig.show()

```

```{python}
fig1 = px.histogram(clean_data.query('H04 == "Exports"'), y='H05_truncated', x='Amount')

# Update layout for better readability
fig1.update_layout(
    yaxis_title="Shortened H05 Labels",
    xaxis_title="Yearly Values",
    title="Histogram with Truncated Labels"
)

# Show the plot
fig1.show()
```
